BACKUP ~weidu_external/zgtweaks/backup~ // location to store files for uninstall purposes
AUTHOR ~Graion Dilach~
VERSION ~1.9~

ALWAYS
// do not convert Setup.tra files, those should be UTF8 already
	ACTION_DEFINE_ARRAY arrayNoConvert BEGIN setup END 
	ACTION_DEFINE_ARRAY arrayReload BEGIN mod END
	
	// define variable for HANDLE_CHARSETS out_path so it can be reused later
	OUTER_TEXT_SPRINT "HANDLE_CHARSETS_OUT_PATH" EVAL "weidu_external\zgtweaks\lang"
	
	LAF HANDLE_CHARSETS
		INT_VAR
			from_utf8 = 1
			infer_charset = 1
			verbose = 1 // you can disable this if you want to skip verbose output
		STR_VAR
			default_language = english
			tra_path = EVAL "%MOD_FOLDER%"
			out_path = EVAL "%HANDLE_CHARSETS_OUT_PATH%" // location of converted .tra files
			noconvert_array = arrayNoConvert
			reload_array = arrayReload
	END
	
	// for AUTO_TRA: if the game is the enhanced edition, the conversion will not happen so all .tra files should be loaded from "%MOD_FOLDER%\Lang"
	ACTION_IF (GAME_IS "bgee bg2ee eet iwdee pstee") THEN BEGIN
		OUTER_TEXT_SPRINT "TRA_LOCATION" EVAL "%MOD_FOLDER%"
	END

	// for AUTO_TRA: if the game is the classic edition, all converted .tra files will be loaded from HANDLE_CHARSETS out_path
	ACTION_IF NOT (GAME_IS "bgee bg2ee eet iwdee pstee") THEN BEGIN
		OUTER_TEXT_SPRINT "TRA_LOCATION" EVAL "%HANDLE_CHARSETS_OUT_PATH%"
	END

END

AUTO_TRA "%TRA_LOCATION%\%s"

LANGUAGE ~English~ ~english~
	~zgtweaks/english/setup.tra~
	~zgtweaks/english/mod.tra~

LANGUAGE ~Russian (by yota13)~ ~russian~
	~zgtweaks/english/setup.tra~
	~zgtweaks/english/mod.tra~
	~zgtweaks/russian/setup.tra~
	~zgtweaks/russian/mod.tra~
	
LANGUAGE ~French~ ~french~
	~zgtweaks/english/setup.tra~
	~zgtweaks/english/mod.tra~
	~zgtweaks/french/setup.tra~
	~zgtweaks/french/mod.tra~

BEGIN @0
LABEL ZG-SCROLLS-FOR-MAGES
DESIGNATED 10
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 1 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 0) BEGIN
			ADD_CRE_ITEM ~ZGTRWS%max_spell_level%~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY

BEGIN @1
LABEL ZG-LOWLVL-SCROLLS-FOR-HIGHLVL-MAGES
DESIGNATED 11
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 1 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 4) BEGIN
			SET secondary_spell_level = max_spell_level - 4
			ADD_CRE_ITEM ~ZGTRWS%secondary_spell_level%~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY
		
BEGIN @2
LABEL ZG-RANDOM-SCROLLS-FOR-MAGES
DESIGNATED 12
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 1 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 0) BEGIN
			ADD_CRE_ITEM ~ZGTRWS%max_spell_level%M~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY

BEGIN @3
LABEL ZG-RANDOM-LOWLVL-SCROLLS-FOR-HIGHLVL-MAGES
DESIGNATED 13
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 1 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 4) BEGIN
			SET secondary_spell_level = max_spell_level - 4
			ADD_CRE_ITEM ~ZGTRWS%secondary_spell_level%M~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY


BEGIN @4
LABEL ZG-SCROLLS-FOR-CLERICS
DESIGNATED 20
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 0 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 0) BEGIN
			ADD_CRE_ITEM ~ZGTRWS%max_spell_level%~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY

BEGIN @5
LABEL ZG-LOWLVL-SCROLLS-FOR-HIGHLVL-CLERICS
DESIGNATED 21
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 0 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 4) BEGIN
			SET secondary_spell_level = max_spell_level - 4
			ADD_CRE_ITEM ~ZGTRWS%secondary_spell_level%~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY
		
BEGIN @6
LABEL ZG-RANDOM-SCROLLS-FOR-CLERICS
DESIGNATED 22
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 0 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 0) BEGIN
			ADD_CRE_ITEM ~ZGTRWS%max_spell_level%M~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY

BEGIN @7
LABEL ZG-RANDOM-LOWLVL-SCROLLS-FOR-HIGHLVL-CLERICS
DESIGNATED 23
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	INCLUDE ~%MOD_FOLDER%/library/setup_scrolls.tpa~

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~ZGTRWS1.ITM~ BEGIN
		LAF setup_random_scrolls END
	END

	OUTER_SET max_spell_level = 0

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		GET_OFFSET_ARRAY spell_mem_array CRE_V10_SPELL_MEM_INFO
		PHP_EACH spell_mem_array AS spell_mem_no => spell_mem_offset
		BEGIN
			READ_SHORT (spell_mem_offset + 0x0000) spell_level
			READ_SHORT (spell_mem_offset + 0x0006) spell_type
			READ_LONG (spell_mem_offset + 0x000c) spell_count
	
			PATCH_IF (spell_type == 0 AND spell_count > 0 AND max_spell_level < spell_level + 1) BEGIN
				max_spell_level = spell_level + 1
			END
		END
		PATCH_IF (max_spell_level > 4) BEGIN
			SET secondary_spell_level = max_spell_level - 4
			ADD_CRE_ITEM ~ZGTRWS%secondary_spell_level%M~ #1 #0 #0 ~NONE~ ~INV QITEM~
		END
		SET max_spell_level = 0
		BUT_ONLY


BEGIN @100
LABEL ZG-BOBW-WISDOM-TABLE
DESIGNATED 100

	COPY ~%MOD_FOLDER%/2da/mxsplwis.2da~ ~override~

BEGIN @101
LABEL ZG-MULTICLASS-RANGER-SLOTS
DESIGNATED 101

	INCLUDE ~zgtweaks\library\multiclassrangerslots.tpa~

BEGIN @1010
LABEL ZG-IWD2-WORGS
DESIGNATED 1000
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet~) @1000

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~MWORA1.BAM~ BEGIN
		COPY ~%MOD_FOLDER%/copy/worg~ ~override~
	END

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		READ_LONG 0x28 anim
		PATCH_IF anim = 0x7B01 BEGIN
			WRITE_LONG 0x28 0xE280
		END
		BUT_ONLY

BEGIN @1011
LABEL ZG-SOD-PLANETARS
DESIGNATED 1001
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee eet~) @1000

	ACTION_IF NOT FILE_EXISTS_IN_GAME ~mplfg1.BAM~ BEGIN
		COPY ~%MOD_FOLDER%/copy/planetar~ ~override~
	END

	COPY_EXISTING ~ca#plan.cre~  ~override~ // Planetar
		~ohdplanb.cre~ ~override~ // planetar of justice
		~ohdplanj.cre~ ~override~ // planetar of justice
		~ohdplanl.cre~ ~override~ // planetar
		~ohdpplan.cre~ ~override~ // planetar
		~ohdsolar.cre~ ~override~ // planetar
		~ohdsplan.cre~ ~override~ // planetar
		~plangood.cre~ ~override~ // planetar
		~planet01.cre~ ~override~ // planetar
		PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
			WRITE_LONG 0x28 0x7F4C
		END
		BUT_ONLY IF_EXISTS

	COPY_EXISTING ~ca#fplan.cre~ ~override~ // fallen Planetar
		~planevil.cre~ ~override~ // planetar
		~planwish.cre~ ~override~ // planetar
		~ohbwing.cre~ ~override~ // The Winged
		~ohbwing2.cre~ ~override~ // The Winged
		PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
			WRITE_LONG 0x28 0x7F4D
		END
		BUT_ONLY IF_EXISTS

	 // revert planetar weapons to one-handed against P&P Celestials and SR
	 COPY_EXISTING ~ca#planw.itm~ ~override~
		~dvplangw.itm~ ~override~
		~dvplanew.itm~ ~override~
		~ohbwing.itm~ ~override~
		PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
		  WRITE_ASCII 0x22 ~S1~ // one-handed sword
		END
		BUT_ONLY IF_EXISTS

BEGIN @9999
LABEL ZG-EQUIP-WHAT-I-CAN
DESIGNATED 9999
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet soa tob tutu tutu_totsc bgt ca iwd_in_bg2~) @1000

	INCLUDE ~zgtweaks\library\equipinventory.tpa~

BEGIN @10000
LABEL ZG-BAG-OF-SPILLING
DESIGNATED 10000
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee iwdee eet soa tob tutu tutu_totsc bgt ca iwd_in_bg2~) @1000

	MKDIR ~./weidu_external/zgtweaks/equipdump~
	ACTION_DEFINE_ARRAY spilled_creatures BEGIN END
	OUTER_SET array_index = 0

	INCLUDE ~zgtweaks\library\spilling.tpa~

	PRINT ~Dumping creature item data...~
	SILENT

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		LPF TRY_MOVE_UNAVAILABLE_ITEMS_TO_INVENTORY END
	BUT_ONLY

	COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
		LPF DUMP_CRE_ITEM RET spill END
		PATCH_IF spill = 1 BEGIN
			SPRINT  $spilled_creatures(~%array_index%~) ~%SOURCE_RES%~
			array_index += 1
		END
	BUT_ONLY

	VERBOSE
	PRINT ~Moving excessive items to bags...~

	COPY ~%MOD_FOLDER%/copy/ZGTBAG.BAM~ ~override~

	COPY ~%MOD_FOLDER%/copy/ZGTBAG.ITM~ ~weidu_external/zgtweaks~
		SAY NAME1 @10003
		SAY NAME2 @10001
		SAY DESC @10002
		SAY UNIDENTIFIED_DESC @10004

	OUTER_SET bagindex = 0
	ACTION_PHP_EACH %spilled_creatures% AS crekey => crevalue BEGIN
		OUTER_SET bagindex += 1
		ACTION_IF bagindex > 0xFFFF BEGIN
			FAIL ~Ran out of bag indexes; component failed to install.~
		END

		LAF TO_HEX_NUMBER INT_VAR value = bagindex RET hexNumber END

		COPY ~weidu_external/zgtweaks/ZGTBAG.ITM~ ~override/ZGTB%hexNumber%.ITM~

		COPY_EXISTING ~%crevalue%.cre~ ~override~
			REMOVE_CRE_ITEMS
			PATCH_REINCLUDE ~weidu_external/zgtweaks/equipdump/%crevalue%~
			ADD_CRE_ITEM ~ZGTB%hexNumber%~ #0 #0 #0 ~IDENTIFIED&UNSTEALABLE~ ~INV8~
		BUT_ONLY

		COPY ~%MOD_FOLDER%/copy/ZGTBAG.STO~ ~override/ZGTB%hexNumber%.STO~
			SAY NAME2 @10001
			PATCH_REINCLUDE ~weidu_external/zgtweaks/equipdump/spilled-%crevalue%~
	END

	COPY ~%MOD_FOLDER%/copy/ZGTRNT.BAM~ ~override~

	COPY_EXISTING_REGEXP GLOB ~RNDEQU.*\.ITM~ ~override~
		LPF PATCH_RANDOM_TREASURE END
	BUT_ONLY IF_EXISTS

	COPY_EXISTING_REGEXP GLOB ~RNDWEP.*\.ITM~ ~override~
		LPF PATCH_RANDOM_TREASURE END
	BUT_ONLY IF_EXISTS

	COPY_EXISTING_REGEXP GLOB ~RNDMAG.*\.ITM~ ~override~
		LPF PATCH_RANDOM_TREASURE END
	BUT_ONLY IF_EXISTS

	COPY_EXISTING_REGEXP GLOB ~RNDSCR.*\.ITM~ ~override~
		LPF PATCH_RANDOM_TREASURE END
	BUT_ONLY IF_EXISTS

	COPY_EXISTING_REGEXP GLOB ~RNDTRE.*\.ITM~ ~override~
		LPF PATCH_RANDOM_TREASURE END
	BUT_ONLY IF_EXISTS

	COPY_EXISTING ~RNDTRES.2DA~ ~override~
		COUNT_2DA_COLS cols // amount of columns
		READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
		FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
			READ_2DA_ENTRY_FORMER rows row 0 ~rndtreasure~ // read column value
			PATCH_IF FILE_EXISTS_IN_GAME ~%rndtreasure%.itm~ BEGIN
				INNER_ACTION BEGIN
					COPY_EXISTING ~%rndtreasure%.itm~ ~override~
						LPF PATCH_RANDOM_TREASURE END
				END
			END ELSE BEGIN
				INNER_ACTION BEGIN
					COPY_EXISTING ~RNDTRE01.ITM~ ~override\%rndtreasure%.itm~
				END
			END
		END
	BUT_ONLY IF_EXISTS
